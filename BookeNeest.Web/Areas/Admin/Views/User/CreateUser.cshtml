@using BookeNeest.Domain.Constants
@model BookeNeest.Web.Areas.Admin.Models.CreateUserViewModel

@{
    //Model.Roles = BookeNeestUserRoles.ToSelectList();
}

<h2 class="custom-book-head">Create New User</h2>

<hr/>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div id="createUserForm" class="form-horizontal custom-book">

        @Html.ValidationSummary(false, "", new {@class = "text-danger"})

        <div class="form-group row">
            @Html.LabelFor(model => model.UserName, "Username", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.UserName, htmlAttributes: new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.UserName, "", htmlAttributes: new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Email, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Email, htmlAttributes: new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.Email, "", htmlAttributes: new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.Password, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.PasswordFor(model => model.Password, htmlAttributes: new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.Password, "", htmlAttributes: new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.FirstName, "First Name", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.FirstName, htmlAttributes: new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.FirstName, "", htmlAttributes: new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.LastName, "Last Name", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.LastName, htmlAttributes: new {@class = "form-control"})
                @Html.ValidationMessageFor(model => model.LastName, "", htmlAttributes: new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group row">
            @Html.LabelFor(model => model.SelectedRoles, "Roles", htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.SelectedRoles, Model.Roles,
                    htmlAttributes: new {@class = "form-control", multiple = "true"})
                @Html.ValidationMessageFor(model => model.Roles, "", htmlAttributes: new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary form-control custom-book"/>
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/select2")
    
    <script type="text/javascript" language="javascript">
        $(document).ready(function() {
            $('select').select2({
                placeholder: 'Choose roles',
                selectOnClose: false
            });
            $('.select2-container--above').removeClass('select2-container--above').addClass('select2-container--below');
        });
    </script>
}