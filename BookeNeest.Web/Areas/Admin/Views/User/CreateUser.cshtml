@using BookeNeest.Domain.Constants
@model BookeNeest.Web.Areas.Admin.Models.CreateUserViewModel

@{
    Model.Roles = BookeNeestUserRoles.ToSelectList();
}

<h2 class="custom-book-head">Create new user</h2>

<hr />

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal custom-book-fld">

        @Html.ValidationSummary(false, "", new { @class = "text-danger" })

        <div class="form-group ">
            @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.SelectedRoles, "Roles", htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.DropDownListFor(model => model.SelectedRoles, Model.Roles, "Choose role", new { @class ="form-control", multiple="multiple", hidden="hidden"})
            
            @*@Html.LabelFor(model => model.Roles, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4 form-group" dir="rtl">
                @foreach (var role in Model.Roles)
                {
                    @Html.Label(role.Text, new { @class = "control-label" });
                    @Html.CheckBoxFor(m => role.Selected, new { @class = "form-control ", size=""});
                }
            </div>*@
            @Html.ValidationMessageFor(model => model.Roles, "", new { @class = "text-danger" })
        </div>
        


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default form-control custom-book" />
            </div>
        </div>
    </div>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
